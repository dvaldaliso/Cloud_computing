apiVersion: apps/v1
kind: Deployment
metadata:
  name: advisorsypanel-deployment
  labels:
    app: advisorsypanel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: advisorsypanel
  template:
    metadata:
      labels:
        app: advisorsypanel
    spec:
      containers:
      - name: webapp
        image: dvaldaliso/advisorsy:1.0
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        env:
        - name: MYSQL_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password  
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: mysql_url
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: mysql_name_bd
        - name: MEMCACHED_HOST
          valueFrom:
            configMapKeyRef:
              name: memcached-config
              key: memcached_url
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: redis-config
              key: redis_url      
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
spec:
  type: NodePort
  selector:
    app: advisorsypanel
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30080
    